---
# tasks file for provisionEC2

- name: launch vpc 
  ec2_vpc_net: 
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region }}"
    state: present 
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register: vpc 

- name: creating subnet to a vpc 
  ec2_vpc_subnet: 
    state: present 
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    cidr: "{{ subnet_cidr }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    map_public: yes 
    resource_tags:
      Name: "{{ subnet_name }}"
  register: subnet 

- name: creating igw 
  ec2_vpc_igw: 
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present 
    tags: 
      Name: "{{ igw_name }}"
  register: igw 

- name: routing igw 
  ec2_vpc_route_table: 
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    subnets: 
      - "{{ subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
    tags: 
      Name: "{{ route_name }}"

- name: creating sg - allowing all traffic 
  ec2_group: 
    name: k8s_cluster 
    description: "k8s cluster security group"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules: 
      - proto: all
        cidr_ip: 0.0.0.0/0
    rules_egress: 
      - proto: all 
        cidr_ip: 0.0.0.0/0
  register: sg 

- name: launch ec2 instance - k8s Master 
  ec2: 
    key_name: ansible 
    instance_type: t2.micro 
    image: ami-010aff33ed5991201
    wait: yes 
    count: 1 
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    state: present 
    group_id: "{{ sg.group_id }}"
    region: "{{ region }}"
    assign_public_ip: yes 
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    wait_timeout: 600
    instance_tags: 
      Name: "{{ mastag }}"
  register: master 

- name: launch ec2 instance - k8s Slave1
  ec2:
    key_name: ansible
    instance_type: t2.micro
    image: ami-010aff33ed5991201
    wait: yes
    count: 1
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    state: present
    group_id: "{{ sg.group_id }}"
    region: "{{ region }}"
    assign_public_ip: yes
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    wait_timeout: 600
    instance_tags:
      Name: "{{ slv1tag }}"
  register: slave1

- name: launch ec2 instance - k8s Slave2
  ec2:
    key_name: ansible
    instance_type: t2.micro
    image: ami-010aff33ed5991201
    wait: yes
    count: 1
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    state: present
    group_id: "{{ sg.group_id }}"
    region: "{{ region }}"
    assign_public_ip: yes
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    wait_timeout: 600
    instance_tags:
      Name: "{{ slv2tag }}"
  register: slave2

- name: delete inventory if already exists 
  command: rm -rf "{{ inv_path }}"
  ignore_errors: yes 

- name: creating inventory 
  command: touch "{{ inv_path }}"

- name: updating inventory - master 
  blockinfile: 
    path: "{{ inv_path }}"
    marker: "# ANSIBLE MANAGED BLOCK FOR K8S MASTER NODE {mark}"
    block: |
            [k8s_master]
            {{ master.instances.0.public_ip }} ansible_user=ec2-user ansible_connection=ssh 

- name: updating inventory - slaves
  blockinfile:
    path: "{{ inv_path }}"
    marker: "# ANSIBLE MANAGED BLOCK FOR K8S SLAVE NODES {mark}"
    block: |
            [k8s_slave]
            {{ slave1.instances.0.public_ip }} ansible_user=ec2-user ansible_connection=ssh
            {{ slave2.instances.0.public_ip }} ansible_user=ec2-user ansible_connection=ssh

- name: wait for ssh connection
  wait_for_connection: 
    delay: 60
    timeout: 300

- name: cloud env for k8s cluster done 
  debug: 
    msg: "AWS Cloud setup for k8s Cluster is done !!"



